一、git clone    

    拉取所有分支，并为远程仓库的当前活动分支建立本地追踪分支



用法：

  git clone [-o 给远程仓库地址起个名称] 远程仓库的地址 [远程仓库在本地的名字]

例子1
  
  git clone 192.168.1.224:/tmp/tdr
  
  1、因为没有给出参数“[-o 给远程仓库地址起个名称]”，所以远程仓库地址“192.168.1.224:/tmp/tdr”在本地的默认简称为origin
  2、因为没有给出参数“[远程仓库在本地的名字]”，所以远程仓库在本地的名称不会改变为tdr
  3、git clone会将远程仓库的所有分支都拉回来，但是只为远程仓库当前的活动分支，建立对应的本地追踪分支。
  4、git clone会参照远程仓库的活动分支，创建一个对应的本地分支，并且让其追踪远程分支，这就是说git clone不一定建立的是远程仓库master分支的对应分支（当远程仓库当前的活动分支为其他分支时，具体可以看git help clone）。

例子2

   git clone -o bla 192.168.1.224:/tmp/tdr hh
   
   1、远程仓库地址“192.168.1.224:/tmp/tdr”在本地的简称，不再是默认的origin，而是我们给出的bla
   
   2、同样，远程仓库在本地的名称，也不再是原本tdr，而是我们给出的hh

二、git fetch   

    
    只拉取不合并，且是拉取所有分支，注意pull只拉取要和本地分支合并的远程分支，所以不是拉取远程仓库的所有分支，而git fetch 是拉取远程仓库的所有分支


用法：

    git fetch [远程仓库的地址或简称] [要拉取的分支名称，省略意味拉取所有分支]

例子1
    
    git fetch
    
    1、当远程仓库地址的简称为origin，且要拉取远程仓库的所有分支，可以这样用

例子2
    
    git fetch bla
    
    1、拉取远程仓库bla的所有分支，当远程仓库地址的简称不是origin时，必须要给出参数“[远程仓库的地址或简称]”

三、git pull   
   
    拉取远程仓库的某个分支并与其在本地的分支进行合并，也拉所有分支。

用法
   git pull <远程主机名> <远程分支名>:<本地分支名>

例子1
   git pull origin dev

   1、省略<本地分支>意味着将远程仓库origin的dev分支与当前所在分支进行合并

四、git push
  
用法

   git push <远程主机名> <本地分支名>
   

          
   git push <远程主机名> <本地分支名>:<远程分支名>
   
      



   git push -a <远程主机名>