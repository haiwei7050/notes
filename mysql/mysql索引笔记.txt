1. 二分查找法 (binary search)
   1) 二分查找法只能在, 有序数组, 上使用
   2) 有序数组, 不方便插入

2. 二叉搜索树(binary search tree)
   1) 定义
      如果左子树不为空, 那么左子树上的任意节点都, 小于根节点
      如果左子树不为空, 那么左子树上的任意节点都, 大于根节点
      创建的过程就是对数据排序的过程
   2) 优点
      搜索, 性能和二分查找法类似
      插入, 因为使用的是链表来存储, 所以易于插入
   3) 缺点
      当插入有序数据时, 会退化为链表, 则查找时会类似遍历链表

3. 完全平衡二叉搜索树(AVL)
   1) 一种特殊的二叉搜索树, 它在插入时会对整棵树进行平衡, 进而解决二叉搜索树退化的问题
   2) 因为插入时会对整棵树进行平衡, 所以插入速度小于二叉搜索树

4. 红黑树
   1) 一种特殊的AVL树, 它不会在每次插入时对整棵树进行平衡, 只会做部分平衡
   2) 所以它的插入性能优于AVL, 又不会出现二叉搜索树退化的问题